
> nextn@0.1.0 test
> jest --runInBand --verbose

FAIL src/test/research-task.test.ts (66.432 s)
  researchTask AI Flow
    basic functionality
      ‚úï should research task details and return enhanced task information (8693 ms)
      ‚úì should handle task research for frontend components (2500 ms)
      ‚úì should require model parameter (3 ms)
    error handling
      ‚úì should handle API errors gracefully (1 ms)
      ‚úì should handle empty response (1 ms)
      ‚úï should handle malformed response gracefully (7519 ms)
    configuration options
      ‚úï should pass configuration options to AI service (7431 ms)
      ‚úì should handle undefined configuration gracefully (7504 ms)
    prompt template
      ‚úì should include all context information in the prompt (7630 ms)
      ‚úì should include required sections in prompt (7451 ms)
      ‚úì should include markdown formatting instructions (7502 ms)
    task enhancement
      ‚úì should preserve content in research output (7508 ms)
      ‚úì should handle tasks with database operations (2521 ms)

  ‚óè researchTask AI Flow ‚Ä∫ basic functionality ‚Ä∫ should research task details and return enhanced task information

    expect(received).toContain(expected) // indexOf

    Expected substring: "Implementation Steps"
    Received string:    "Default research content"

    [0m [90m 79 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m researchTask(input[33m,[39m params[33m.[39mapiKey[33m,[39m params[33m.[39mmodel[33m,[39m params[33m.[39mapiBase)[33m;[39m
     [90m 80 |[39m
    [31m[1m>[22m[39m[90m 81 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Implementation Steps'[39m)[33m;[39m
     [90m    |[39m                                      [31m[1m^[22m[39m
     [90m 82 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Required Libraries'[39m)[33m;[39m
     [90m 83 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Acceptance Criteria'[39m)[33m;[39m
     [90m 84 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'jsonwebtoken'[39m)[33m;[39m[0m

      at Object.toContain (src/test/research-task.test.ts:81:38)

  ‚óè researchTask AI Flow ‚Ä∫ error handling ‚Ä∫ should handle malformed response gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Invalid response format without proper structure"
    Received: "Task research content"

    [0m [90m 192 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m researchTask(input[33m,[39m params[33m.[39mapiKey[33m,[39m params[33m.[39mmodel[33m,[39m params[33m.[39mapiBase)[33m;[39m
     [90m 193 |[39m
    [31m[1m>[22m[39m[90m 194 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoBe([32m'Invalid response format without proper structure'[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 195 |[39m     })[33m;[39m
     [90m 196 |[39m   })[33m;[39m
     [90m 197 |[39m[0m

      at Object.toBe (src/test/research-task.test.ts:194:38)

  ‚óè researchTask AI Flow ‚Ä∫ configuration options ‚Ä∫ should pass configuration options to AI service

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"config": {"apiBase": "https://api.test.com", "apiKey": "test-key", "temperature": 0.8}, "model": "test/model", "prompt": StringContaining "Test task"}
    Received
           1
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },
           2
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },
           3
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },

    Number of calls: 3

    [0m [90m 216 |[39m       [36mawait[39m researchTask(input[33m,[39m apiKey[33m,[39m model[33m,[39m apiBase[33m,[39m temperature)[33m;[39m
     [90m 217 |[39m
    [31m[1m>[22m[39m[90m 218 |[39m       expect(mockAI[33m.[39mgenerate)[33m.[39mtoHaveBeenCalledWith({
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 219 |[39m         model[33m:[39m [32m'test/model'[39m[33m,[39m
     [90m 220 |[39m         prompt[33m:[39m expect[33m.[39mstringContaining([32m'Test task'[39m)[33m,[39m
     [90m 221 |[39m         config[33m:[39m {[0m

      at Object.toHaveBeenCalledWith (src/test/research-task.test.ts:218:31)

  console.error
    Error generating architecture: Error: AI generation failed
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:80:21)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 35 |[39m     [36mreturn[39m result[33m;[39m
     [90m 36 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 37 |[39m     console[33m.[39merror([32m'Error generating architecture:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 38 |[39m     [36mif[39m (
     [90m 39 |[39m       error [36minstanceof[39m [33mError[39m [33m&&[39m
     [90m 40 |[39m       (error[33m.[39mmessage[33m.[39mincludes([32m'API key not found'[39m) [33m||[39m[0m

      at error (src/app/actions.ts:37:13)
      at Object.<anonymous> (src/test/actions.test.ts:84:7)

  console.error
    Error generating architecture: Error: Model is required
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:91:21)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 35 |[39m     [36mreturn[39m result[33m;[39m
     [90m 36 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 37 |[39m     console[33m.[39merror([32m'Error generating architecture:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 38 |[39m     [36mif[39m (
     [90m 39 |[39m       error [36minstanceof[39m [33mError[39m [33m&&[39m
     [90m 40 |[39m       (error[33m.[39mmessage[33m.[39mincludes([32m'API key not found'[39m) [33m||[39m[0m

      at error (src/app/actions.ts:37:13)
      at Object.<anonymous> (src/test/actions.test.ts:95:7)

  console.error
    Error generating tasks: Error: Generation failed
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:166:47)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 65 |[39m     [36mreturn[39m result[33m;[39m
     [90m 66 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 67 |[39m     console[33m.[39merror([32m'Error generating tasks:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 68 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
     [90m 69 |[39m       [32m'Failed to generate tasks. The model may have returned an unexpected response.'[39m
     [90m 70 |[39m     )[33m;[39m[0m

      at error (src/app/actions.ts:67:13)
      at Object.<anonymous> (src/test/actions.test.ts:168:7)

  console.error
    Error generating file structure: Error: Invalid API key
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:213:55)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m  97 |[39m     [36mreturn[39m result[33m;[39m
     [90m  98 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m  99 |[39m     console[33m.[39merror([32m'Error generating file structure:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 100 |[39m     [36mif[39m (
     [90m 101 |[39m       error [36minstanceof[39m [33mError[39m [33m&&[39m
     [90m 102 |[39m       (error[33m.[39mmessage[33m.[39mincludes([32m'API key not found'[39m) [33m||[39m[0m

      at error (src/app/actions.ts:99:13)
      at Object.<anonymous> (src/test/actions.test.ts:215:7)

  console.error
    Error generating file structure: Error: Unknown error
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:227:55)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m  97 |[39m     [36mreturn[39m result[33m;[39m
     [90m  98 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m  99 |[39m     console[33m.[39merror([32m'Error generating file structure:'[39m[33m,[39m error)[33m;[39m
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 100 |[39m     [36mif[39m (
     [90m 101 |[39m       error [36minstanceof[39m [33mError[39m [33m&&[39m
     [90m 102 |[39m       (error[33m.[39mmessage[33m.[39mincludes([32m'API key not found'[39m) [33m||[39m[0m

      at error (src/app/actions.ts:99:13)
      at Object.<anonymous> (src/test/actions.test.ts:229:7)

  console.error
    Error researching task "Test task" (Attempt 1/3): Error: Research failed
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:276:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 130 |[39m       [36mreturn[39m result[33m;[39m
     [90m 131 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 132 |[39m       console[33m.[39merror(
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 133 |[39m         [32m`Error researching task "${input.title}" (Attempt ${i + 1}/${MAX_RETRIES}):`[39m[33m,[39m
     [90m 134 |[39m         error
     [90m 135 |[39m       )[33m;[39m[0m

      at error (src/app/actions.ts:132:15)
      at Object.<anonymous> (src/test/actions.test.ts:278:7)

  console.error
    Error generating architecture: Error: Model is required
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:319:56)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 35 |[39m     [36mreturn[39m result[33m;[39m
     [90m 36 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 37 |[39m     console[33m.[39merror([32m'Error generating architecture:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 38 |[39m     [36mif[39m (
     [90m 39 |[39m       error [36minstanceof[39m [33mError[39m [33m&&[39m
     [90m 40 |[39m       (error[33m.[39mmessage[33m.[39mincludes([32m'API key not found'[39m) [33m||[39m[0m

      at error (src/app/actions.ts:37:13)
      at Object.<anonymous> (src/test/actions.test.ts:321:9)

  console.error
    Error generating tasks: Error: Weird internal error
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/actions.test.ts:327:31)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 65 |[39m     [36mreturn[39m result[33m;[39m
     [90m 66 |[39m   } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 67 |[39m     console[33m.[39merror([32m'Error generating tasks:'[39m[33m,[39m error)[33m;[39m
     [90m    |[39m             [31m[1m^[22m[39m
     [90m 68 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
     [90m 69 |[39m       [32m'Failed to generate tasks. The model may have returned an unexpected response.'[39m
     [90m 70 |[39m     )[33m;[39m[0m

      at error (src/app/actions.ts:67:13)
      at Object.<anonymous> (src/test/actions.test.ts:337:7)

FAIL src/test/actions.test.ts
  App Actions
    runGenerateArchitecture
      ‚úì should call generateArchitecture with input and options (2 ms)
      ‚úì should handle undefined options (2 ms)
      ‚úï should handle errors from generateArchitecture (59 ms)
      ‚úï should preserve original error if it contains specific messages (5 ms)
    runGenerateTasks
      ‚úì should validate required input fields (1 ms)
      ‚úì should call generateTasks with all parameters (1 ms)
      ‚úì should handle missing architecture field (1 ms)
      ‚úì should handle errors from generateTasks (3 ms)
    runGenerateFileStructure
      ‚úì should call generateFileStructure with correct parameters
      ‚úï should handle API key errors with specific message (4 ms)
      ‚úì should handle general errors (3 ms)
    runResearchTask
      ‚úï should call researchTask with correct parameters (3 ms)
      ‚úï should handle errors from researchTask (503 ms)
      ‚úï should handle undefined options
    error handling patterns
      ‚úï should preserve specific error messages (4 ms)
      ‚úì should provide generic error messages for unexpected errors (3 ms)
    parameter passing
      ‚úì should handle partial options correctly
      ‚úì should handle boolean and number options correctly

  ‚óè App Actions ‚Ä∫ runGenerateArchitecture ‚Ä∫ should handle errors from generateArchitecture

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to generate architecture. The model may have returned an unexpected response."
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:84:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:84:60)

  ‚óè App Actions ‚Ä∫ runGenerateArchitecture ‚Ä∫ should preserve original error if it contains specific messages

    expect(received).rejects.toThrow(expected)

    Expected substring: "Model is required"
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:95:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:95:60)

  ‚óè App Actions ‚Ä∫ runGenerateFileStructure ‚Ä∫ should handle API key errors with specific message

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to generate file structure: Your LLM API key is missing or invalid. Please check it in settings."
    Received message:   "File structure generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD, architecture, or specifications."

        [0m [90m 108 |[39m       )[33m;[39m
         [90m 109 |[39m     }
        [31m[1m>[22m[39m[90m 110 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m     |[39m           [31m[1m^[22m[39m
         [90m 111 |[39m       [32m'File structure generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD, architecture, or specifications.'[39m
         [90m 112 |[39m     )[33m;[39m
         [90m 113 |[39m   }[0m

      at runGenerateFileStructure (src/app/actions.ts:110:11)
      at Object.<anonymous> (src/test/actions.test.ts:215:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:215:61)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should call researchTask with correct parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      {"architecture": "React with JWT", "fileStructure": "src/auth/", "specifications": "Login and registration", "title": "Implement user authentication"},
      "test-key",
      "test/model",
      "https://api.test.com",
    - 0.8,
    + undefined,
    + 0.8,

    Number of calls: 1

    [0m [90m 256 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m runResearchTask(input[33m,[39m options)[33m;[39m
     [90m 257 |[39m
    [31m[1m>[22m[39m[90m 258 |[39m       expect(mockResearchTask)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 259 |[39m         input[33m,[39m
     [90m 260 |[39m         [32m'test-key'[39m[33m,[39m
     [90m 261 |[39m         [32m'test/model'[39m[33m,[39m[0m

      at Object.toHaveBeenCalledWith (src/test/actions.test.ts:258:32)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should handle errors from researchTask

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 276 |[39m       mockResearchTask[33m.[39mmockRejectedValueOnce([36mnew[39m [33mError[39m([32m'Research failed'[39m))[33m;[39m
     [90m 277 |[39m
    [31m[1m>[22m[39m[90m 278 |[39m       [36mawait[39m expect(runResearchTask(input))[33m.[39mrejects[33m.[39mtoThrow(
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 279 |[39m         [32m'Failed to research task. The model may have returned an unexpected response.'[39m
     [90m 280 |[39m       )[33m;[39m
     [90m 281 |[39m     })[33m;[39m[0m

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.expect (src/test/actions.test.ts:278:13)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should handle undefined options

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      {"architecture": "Test architecture", "fileStructure": "Test structure", "specifications": "Test specifications", "title": "Test task"},
      undefined,
      undefined,
      undefined,
      undefined,
    + undefined,

    Number of calls: 1

    [0m [90m 297 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m runResearchTask(input)[33m;[39m
     [90m 298 |[39m
    [31m[1m>[22m[39m[90m 299 |[39m       expect(mockResearchTask)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 300 |[39m         input[33m,[39m
     [90m 301 |[39m         undefined[33m,[39m
     [90m 302 |[39m         undefined[33m,[39m[0m

      at Object.toHaveBeenCalledWith (src/test/actions.test.ts:299:32)

  ‚óè App Actions ‚Ä∫ error handling patterns ‚Ä∫ should preserve specific error messages

    expect(received).rejects.toThrow(expected)

    Expected substring: "Model is required"
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:321:9)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:322:20)

FAIL src/test/documentation-fetcher-comprehensive.test.ts
  DocumentationFetcher Service
    constructor
      ‚úì should initialize with settings (2 ms)
      ‚úì should initialize with GitHub token
      ‚úì should initialize with LLM config (1 ms)
    fetchLibraryDocumentation
      ‚úì should handle empty library list (1 ms)
      ‚úì should skip invalid libraries (1 ms)
      ‚úï should fetch documentation for valid libraries (2 ms)
      ‚úì should use cached documentation when available (1 ms)
      ‚úì should handle errors during documentation fetching
      ‚úï should trim documentation if it exceeds size limits (1 ms)
    error handling and edge cases
      ‚úì should handle network timeouts gracefully (1 ms)
      ‚úì should handle malformed library names (1 ms)
      ‚úï should handle concurrent library fetching (1 ms)
    settings configuration
      ‚úì should respect includeOfficialDocs setting
      ‚úì should respect maxDocumentationSizeKB setting (1 ms)
      ‚úì should respect preferredSources setting
    utility methods
      ‚úì should handle cache directory creation (1 ms)

  ‚óè DocumentationFetcher Service ‚Ä∫ fetchLibraryDocumentation ‚Ä∫ should fetch documentation for valid libraries

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

    [0m [90m 145 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 146 |[39m
    [31m[1m>[22m[39m[90m 147 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 148 |[39m       expect(result[33m.[39mlibraries[[35m0[39m][33m.[39mname)[33m.[39mtoBe([32m'react'[39m)[33m;[39m
     [90m 149 |[39m       expect(result[33m.[39mfetchedCount)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 150 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBe([35m50[39m)[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:147:32)

  ‚óè DocumentationFetcher Service ‚Ä∫ fetchLibraryDocumentation ‚Ä∫ should trim documentation if it exceeds size limits

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

    [0m [90m 253 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 254 |[39m
    [31m[1m>[22m[39m[90m 255 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 256 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBeLessThan([35m2000[39m)[33m;[39m
     [90m 257 |[39m     })[33m;[39m
     [90m 258 |[39m   })[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:255:32)

  ‚óè DocumentationFetcher Service ‚Ä∫ error handling and edge cases ‚Ä∫ should handle concurrent library fetching

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

    [0m [90m 352 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 353 |[39m
    [31m[1m>[22m[39m[90m 354 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 355 |[39m       expect(result[33m.[39mfetchedCount)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 356 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBe([35m30[39m)[33m;[39m
     [90m 357 |[39m     })[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:354:32)

FAIL src/test/generate-architecture.test.ts
  generateArchitecture AI Flow
    basic functionality
      ‚úì should generate architecture and specifications from PRD (3 ms)
      ‚úì should handle PRD with specific technology requirements (1 ms)
      ‚úì should require model parameter (8 ms)
    error handling
      ‚úì should handle API errors gracefully
      ‚úì should handle malformed markdown response
      ‚úï should retry on markdown linting failures (4 ms)
    markdown parsing
      ‚úì should parse sections with different header formats
      ‚úï should handle fallback parsing when headers are missing (1 ms)
    configuration options
      ‚úì should pass configuration options to AI service (1 ms)
      ‚úì should handle undefined configuration gracefully (1 ms)

  ‚óè generateArchitecture AI Flow ‚Ä∫ error handling ‚Ä∫ should retry on markdown linting failures

    expect(received).toBe(expected) // Object.is equality

    Expected: "Fixed content"
    Received: "Some spec content"

    [0m [90m 207 |[39m
     [90m 208 |[39m       expect(result[33m.[39marchitecture)[33m.[39mtoBe([32m'Fixed content'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 209 |[39m       expect(result[33m.[39mspecifications)[33m.[39mtoBe([32m'Fixed content'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 210 |[39m       expect(mockAI[33m.[39mgenerate)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// Should retry[39m
     [90m 211 |[39m     })[33m;[39m
     [90m 212 |[39m   })[33m;[39m[0m

      at Object.toBe (src/test/generate-architecture.test.ts:209:37)

  ‚óè generateArchitecture AI Flow ‚Ä∫ markdown parsing ‚Ä∫ should handle fallback parsing when headers are missing

    expect(received).toBeTruthy()

    Received: ""

    [0m [90m 250 |[39m       [90m// Should still return content even with poor formatting[39m
     [90m 251 |[39m       expect(result[33m.[39marchitecture)[33m.[39mtoBeTruthy()[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m       expect(result[33m.[39mspecifications)[33m.[39mtoBeTruthy()[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 253 |[39m     })[33m;[39m
     [90m 254 |[39m   })[33m;[39m
     [90m 255 |[39m[0m

      at Object.toBeTruthy (src/test/generate-architecture.test.ts:252:37)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/documentation-fetcher.test.ts:25:15)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/documentation-fetcher.test.ts:31:15)

  console.warn
    Failed to fetch from https://docs.react.org: Unknown error

    [0m [90m 393 |[39m         }
     [90m 394 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 395 |[39m         console[33m.[39mwarn([32m`Failed to fetch from ${url}:`[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [32m'Unknown error'[39m)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 396 |[39m         [90m// Continue to next URL[39m
     [90m 397 |[39m       }
     [90m 398 |[39m     }[0m

      at DocumentationFetcher.warn [as fetchFromOfficialSite] (src/services/documentation-fetcher.ts:395:17)
      at DocumentationFetcher.fetchFromSources (src/services/documentation-fetcher.ts:218:37)
      at DocumentationFetcher.fetchLibraryDocumentation (src/services/documentation-fetcher.ts:74:22)
      at Object.<anonymous> (src/test/documentation-fetcher.test.ts:75:22)

  console.warn
    Failed to fetch from https://docs.react.dev: Unknown error

    [0m [90m 393 |[39m         }
     [90m 394 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 395 |[39m         console[33m.[39mwarn([32m`Failed to fetch from ${url}:`[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [32m'Unknown error'[39m)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 396 |[39m         [90m// Continue to next URL[39m
     [90m 397 |[39m       }
     [90m 398 |[39m     }[0m

      at DocumentationFetcher.warn [as fetchFromOfficialSite] (src/services/documentation-fetcher.ts:395:17)
      at DocumentationFetcher.fetchFromSources (src/services/documentation-fetcher.ts:218:37)
      at DocumentationFetcher.fetchLibraryDocumentation (src/services/documentation-fetcher.ts:74:22)
      at Object.<anonymous> (src/test/documentation-fetcher.test.ts:75:22)

  console.warn
    Failed to fetch from https://react.readthedocs.io/en/latest/: _cheerio.load is not a function

    [0m [90m 393 |[39m         }
     [90m 394 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 395 |[39m         console[33m.[39mwarn([32m`Failed to fetch from ${url}:`[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [32m'Unknown error'[39m)[33m;[39m
     [90m     |[39m                 [31m[1m^[22m[39m
     [90m 396 |[39m         [90m// Continue to next URL[39m
     [90m 397 |[39m       }
     [90m 398 |[39m     }[0m

      at DocumentationFetcher.warn [as fetchFromOfficialSite] (src/services/documentation-fetcher.ts:395:17)
      at DocumentationFetcher.fetchFromSources (src/services/documentation-fetcher.ts:218:37)
      at DocumentationFetcher.fetchLibraryDocumentation (src/services/documentation-fetcher.ts:74:22)
      at Object.<anonymous> (src/test/documentation-fetcher.test.ts:75:22)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/documentation-fetcher.test.ts:84:15)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/documentation-fetcher.test.ts:92:15)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/documentation-fetcher.test.ts:98:15)

FAIL src/test/documentation-fetcher.test.ts
  DocumentationFetcher
    Library Search and Verification
      ‚úì should verify libraries exist before fetching documentation (4 ms)
      ‚úì should handle invalid library names gracefully (1 ms)
    Documentation Size Management
      ‚úï should respect size limits (4 ms)
    Settings Handling
      ‚úì should return empty result when documentation is disabled (2970 ms)
      ‚úì should handle different source configurations (1 ms)
    Error Handling
      ‚úì should handle network errors gracefully (1 ms)
      ‚úì should continue processing other libraries when one fails (1 ms)
    Web Technology Detection
      ‚úì should identify web technologies for MDN

  ‚óè DocumentationFetcher ‚Ä∫ Documentation Size Management ‚Ä∫ should respect size limits

    expect(received).toBe(expected) // Object.is equality

    Expected: "github-readme"
    Received: "official-site"

    [0m [90m 61 |[39m       
     [90m 62 |[39m       [90m// Should prioritize README first[39m
    [31m[1m>[22m[39m[90m 63 |[39m       expect(trimmed[[35m0[39m][33m.[39mtype)[33m.[39mtoBe([32m'github-readme'[39m)[33m;[39m
     [90m    |[39m                               [31m[1m^[22m[39m
     [90m 64 |[39m     })[33m;[39m
     [90m 65 |[39m   })[33m;[39m
     [90m 66 |[39m[0m

      at Object.toBe (src/test/documentation-fetcher.test.ts:63:31)

  console.warn
    Failed to extract libraries from task 1: Error: Model is required. Please provide a model in "provider/model" format in settings.
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:56:11)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/integration.test.ts:88:49)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/integration.test.ts:88:25)

  console.warn
    Failed to extract libraries from task 2: Error: Model is required. Please provide a model in "provider/model" format in settings.
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:56:11)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/integration.test.ts:88:25)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/integration.test.ts:88:25)

  console.warn
    Failed to extract libraries from task 3: Error: Model is required. Please provide a model in "provider/model" format in settings.
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:56:11)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/integration.test.ts:88:25)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/integration.test.ts:88:25)

  console.warn
    Failed to extract libraries from task 4: Error: Model is required. Please provide a model in "provider/model" format in settings.
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:56:11)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/integration.test.ts:88:25)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/integration.test.ts:88:25)

  console.log
    Extracted libraries: []

      at Object.log (src/test/integration.test.ts:92:15)

FAIL src/test/integration.test.ts
  Integration Tests - Real Functionality
    Library Extraction
      ‚úï should extract only real library names from realistic project tasks (22 ms)
      ‚úï should not extract invalid names from complex technical content (1 ms)
      ‚úï should categorize libraries correctly (1 ms)
    Documentation Fetching
      ‚úì should verify library existence before fetching documentation (394 ms)
      ‚úì should handle non-existent libraries gracefully (698 ms)
    End-to-End Documentation Flow
      ‚úï should extract libraries and fetch documentation for a complete project (1 ms)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should extract only real library names from realistic project tasks

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 93 |[39m       
     [90m 94 |[39m       [90m// Should contain real libraries[39m
    [31m[1m>[22m[39m[90m 95 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                            [31m[1m^[22m[39m
     [90m 96 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'express'[39m)[33m;[39m
     [90m 97 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m
     [90m 98 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'jest'[39m)[33m;[39m[0m

      at Object.toContain (src/test/integration.test.ts:95:28)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should not extract invalid names from complex technical content

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: ["react", "typescript"]

    [0m [90m 136 |[39m       
     [90m 137 |[39m       [90m// Should extract pygame but not the class/method names[39m
    [31m[1m>[22m[39m[90m 138 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 139 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'pygame.sprite.sprite'[39m)[33m;[39m
     [90m 140 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'config.font_path'[39m)[33m;[39m 
     [90m 141 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'base.sprite.collision_handler'[39m)[33m;[39m[0m

      at Object.toContain (src/test/integration.test.ts:138:28)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should categorize libraries correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "library"
    Received: undefined

    [0m [90m 164 |[39m       [90m// All libraries should have 'library' category since no hardcoding allowed[39m
     [90m 165 |[39m       expect(react[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 166 |[39m       expect(express[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 167 |[39m       expect(postgresql[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m 168 |[39m       expect(jest[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m 169 |[39m       expect(docker[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m[0m

      at Object.toBe (src/test/integration.test.ts:166:33)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ End-to-End Documentation Flow ‚Ä∫ should extract libraries and fetch documentation for a complete project

    expect(received).toBeGreaterThan(expected)

    Expected: > 3
    Received:   2

    [0m [90m 268 |[39m       [90m// Step 1: Extract libraries[39m
     [90m 269 |[39m       [36mconst[39m libraries [33m=[39m [36mawait[39m [33mLibraryIdentifier[39m[33m.[39midentifyLibraries(projectTasks[33m,[39m [32m'test-api-key'[39m[33m,[39m [32m'test/model'[39m[33m,[39m [32m'https://api.openai.com/v1'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 270 |[39m       expect(libraries[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m3[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 271 |[39m       
     [90m 272 |[39m       [90m// Step 2: Filter high-confidence libraries[39m
     [90m 273 |[39m       [36mconst[39m filtered [33m=[39m [33mLibraryIdentifier[39m[33m.[39mfilterLibraries(libraries[33m,[39m {[0m

      at Object.toBeGreaterThan (src/test/integration.test.ts:270:32)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: undefined

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: test/model

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

  console.log
    [DEBUG] generateFileStructure called with model: google/gemini-pro

      at console.<anonymous> (node_modules/jest-mock/build/index.js:631:25)

PASS src/test/generate-file-structure.test.ts
  generateFileStructure AI Flow
    basic functionality
      ‚úì should generate file structure from PRD, architecture, and specifications (5 ms)
      ‚úì should handle Python/Flask project structure (2 ms)
      ‚úì should require model parameter (10 ms)
      ‚úì should log debug information (2 ms)
    error handling
      ‚úì should handle API errors gracefully (2 ms)
      ‚úì should handle empty response (1 ms)
      ‚úì should retry on markdown linting failures (2 ms)
      ‚úì should return best available content after max retries (1 ms)
    configuration options
      ‚úì should pass configuration options to AI service (3 ms)
      ‚úì should handle undefined configuration gracefully (1 ms)
    prompt template
      ‚úì should include all input parameters in the prompt (2 ms)
      ‚úì should include instructions for markdown output (2 ms)
    markdown linting integration
      ‚úì should call MarkdownLinter with correct parameters (2 ms)
      ‚úì should return fixed content when linter provides it (1 ms)

PASS src/test/generate-tasks.test.ts
  generateTasks AI Flow
    basic functionality
      ‚úì should generate tasks from architecture, specifications, and file structure (3 ms)
      ‚úì should handle TDD mode with different prompt
      ‚úì should require model parameter (10 ms)
    markdown parsing
      ‚úì should parse bullet points with dash (-) format (1 ms)
      ‚úì should parse bullet points with asterisk (*) format
      ‚úì should handle mixed content with headers and text
      ‚úì should use fallback parsing for action-based lines (1 ms)
    error handling
      ‚úì should handle API errors gracefully (1 ms)
      ‚úì should throw error when no tasks can be extracted (1 ms)
      ‚úì should handle empty response
    configuration options
      ‚úì should pass configuration options to AI service (1 ms)
      ‚úì should handle undefined configuration gracefully (1 ms)
    prompt templates
      ‚úì should use standard prompt when TDD is false (1 ms)
      ‚úì should use TDD prompt when TDD is true

PASS src/test/markdown-comprehensive.test.ts
  Markdown Utilities
    ensureMarkdownStructure
      ‚úì should add title if missing (2 ms)
      ‚úì should not add title if already present (1 ms)
      ‚úì should fix header spacing
      ‚úì should remove excessive blank lines (1 ms)
      ‚úì should end with single newline
      ‚úì should preserve code blocks (1 ms)
      ‚úì should handle empty content
      ‚úì should handle whitespace-only content
    formatTaskMarkdown
      ‚úì should handle proper markdown (1 ms)
      ‚úì should convert ### headers to ## headers when missing standard sections (1 ms)
      ‚úì should preserve well-formatted structure
      ‚úì should handle missing structure gracefully
      ‚úì should trim whitespace
    formatArchitectureMarkdown
      ‚úì should ensure Architecture title
      ‚úì should preserve existing Architecture title (1 ms)
      ‚úì should apply general markdown formatting
    formatSpecificationsMarkdown
      ‚úì should ensure Specifications title
      ‚úì should preserve existing title
    formatFileStructureMarkdown
      ‚úì should ensure File Structure title (1 ms)
      ‚úì should handle code-block style structure
    formatPRDMarkdown
      ‚úì should ensure PRD title (1 ms)
      ‚úì should preserve existing PRD title
    error handling and edge cases
      ‚úì should handle null/undefined input (1 ms)
      ‚úì should handle very long content (1 ms)
      ‚úì should handle special characters (1 ms)
      ‚úì should preserve indentation in code blocks
    complex formatting scenarios
      ‚úì should handle mixed content types (1 ms)
      ‚úì should maintain link formatting

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    Detected Libraries:

      at Object.log (src/test/library-identifier-integration.test.ts:142:13)

  console.log
    - react (library) - Confidence: 0.90 - Tasks: task-1, task-4

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - typescript (library) - Confidence: 0.90 - Tasks: task-1

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - react-dom (library) - Confidence: 0.90 - Tasks: task-1

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - express (library) - Confidence: 0.90 - Tasks: task-2

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - mongoose (library) - Confidence: 0.90 - Tasks: task-2

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - jest (library) - Confidence: 0.90 - Tasks: task-2

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - docker (library) - Confidence: 0.90 - Tasks: task-3

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - kubernetes (library) - Confidence: 0.90 - Tasks: task-3

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - nginx (library) - Confidence: 0.90 - Tasks: task-3

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - react-native (library) - Confidence: 0.90 - Tasks: task-4

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    - redux-toolkit (library) - Confidence: 0.90 - Tasks: task-4

      at log (src/test/library-identifier-integration.test.ts:144:15)
          at Array.forEach (<anonymous>)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    DEBUG: Integration test using default response

      at Object.log (src/test/library-identifier-integration.test.ts:47:15)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    DEBUG: Integration test - received prompt: You are a software development expert tasked with extracting required libraries, packages, framework

      at Object.log (src/test/library-identifier-integration.test.ts:17:15)

  console.log
    Extracted Libraries:

      at Object.log (src/test/library-identifier-integration.test.ts:224:13)

  console.log
    - nextjs (library) - Confidence: 0.90

      at log (src/test/library-identifier-integration.test.ts:226:15)
          at Array.forEach (<anonymous>)

  console.log
    - express (library) - Confidence: 0.90

      at log (src/test/library-identifier-integration.test.ts:226:15)
          at Array.forEach (<anonymous>)

  console.log
    - jest (library) - Confidence: 0.90

      at log (src/test/library-identifier-integration.test.ts:226:15)
          at Array.forEach (<anonymous>)

  console.log
    - cypress (library) - Confidence: 0.90

      at log (src/test/library-identifier-integration.test.ts:226:15)
          at Array.forEach (<anonymous>)

PASS src/test/library-identifier-integration.test.ts
  LibraryIdentifier Real-World Integration
    ‚úì should extract libraries from realistic project tasks (13 ms)
    ‚úì should handle edge cases and avoid false positives (3 ms)
    ‚úì should properly categorize libraries based on context (5 ms)

PASS src/test/complete-format-fix.test.ts
  Complete Task Format Fix Integration
    ‚úì Task export should produce clean GitHub-ready markdown (3 ms)
    ‚úì All document types should format consistently (1 ms)
    ‚úì Library extraction format should be clean and consistent
    ‚úì Export format should be ready for GitHub issues (2 ms)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'https://api.openai.com/v1' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: https://api.openai.com/v1

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.log
    Making API call to: https://api.openai.com/v1/chat/completions with model: test/model

      at log (src/ai/litellm.ts:185:11)

  console.error
    LiteLLM generation error: LLM API error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/library-validation.test.ts:28:23)

  console.warn
    Failed to extract libraries from task 1: Error: LLM API Error: LLM API error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
        at Object.generate (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:262:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:20)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:34)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/library-validation.test.ts:28:23)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-validation.test.ts:28:23)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'https://api.openai.com/v1' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: https://api.openai.com/v1

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.log
    Making API call to: https://api.openai.com/v1/chat/completions with model: test/model

      at log (src/ai/litellm.ts:185:11)

  console.error
    LiteLLM generation error: LLM API error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/library-validation.test.ts:28:23)

  console.warn
    Failed to extract libraries from task 2: Error: LLM API Error: LLM API error: Incorrect API key provided: test-api-key. You can find your API key at https://platform.openai.com/account/api-keys.
        at Object.generate (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:262:17)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:20)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:34)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/library-validation.test.ts:28:23)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-validation.test.ts:28:23)

  console.log
    Extracted libraries: []

      at Object.log (src/test/library-validation.test.ts:31:13)

  console.log
    Library details: []

      at Object.log (src/test/library-validation.test.ts:32:13)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/library-validation.test.ts:74:23)

  console.warn
    Failed to extract libraries from task 1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/library-validation.test.ts:74:47)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-validation.test.ts:74:23)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/library-validation.test.ts:99:23)

  console.warn
    Failed to extract libraries from task 1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/library-validation.test.ts:99:47)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-validation.test.ts:99:23)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/library-validation.test.ts:117:23)

  console.warn
    Failed to extract libraries from task 1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/library-validation.test.ts:117:47)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at processTicksAndRejections (node:internal/process/task_queues:95:5)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-validation.test.ts:117:23)

  console.log
    Categories: {}

      at Object.log (src/test/library-validation.test.ts:124:13)

FAIL src/test/library-validation.test.ts
  Library Extraction - Core Functionality
    ‚úï should extract real libraries and reject garbage patterns (314 ms)
    ‚úï should handle import statements correctly (6 ms)
    ‚úï should handle package manager commands (11 ms)
    ‚úï should categorize libraries correctly (7 ms)
    ‚úì should filter libraries by confidence and count (1 ms)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should extract real libraries and reject garbage patterns

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: []

    [0m [90m 33 |[39m     
     [90m 34 |[39m     [90m// Should extract real libraries[39m
    [31m[1m>[22m[39m[90m 35 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m    |[39m                          [31m[1m^[22m[39m
     [90m 36 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m 37 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m
     [90m 38 |[39m     [0m

      at Object.toContain (src/test/library-validation.test.ts:35:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should handle import statements correctly

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 75 |[39m     [36mconst[39m libraryNames [33m=[39m libraries[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m;[39m
     [90m 76 |[39m     
    [31m[1m>[22m[39m[90m 77 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                          [31m[1m^[22m[39m
     [90m 78 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'axios'[39m)[33m;[39m
     [90m 79 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'express'[39m)[33m;[39m
     [90m 80 |[39m     [0m

      at Object.toContain (src/test/library-validation.test.ts:77:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should handle package manager commands

    expect(received).toContain(expected) // indexOf

    Expected value: "lodash"
    Received array: []

    [0m [90m 100 |[39m     [36mconst[39m libraryNames [33m=[39m libraries[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m;[39m
     [90m 101 |[39m     
    [31m[1m>[22m[39m[90m 102 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'lodash'[39m)[33m;[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 103 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'moment'[39m)[33m;[39m
     [90m 104 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'redux'[39m)[33m;[39m
     [90m 105 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'tensorflow'[39m)[33m;[39m[0m

      at Object.toContain (src/test/library-validation.test.ts:102:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should categorize libraries correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 124 |[39m     console[33m.[39mlog([32m'Categories:'[39m[33m,[39m categories)[33m;[39m
     [90m 125 |[39m     [90m// Since no hardcoded categories, all libraries should have 'library' category[39m
    [31m[1m>[22m[39m[90m 126 |[39m     expect([33mObject[39m[33m.[39mkeys(categories)[33m.[39mlength)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 127 |[39m     expect(categories[[32m'library'[39m])[33m.[39mtoBeDefined()[33m;[39m
     [90m 128 |[39m   })[33m;[39m
     [90m 129 |[39m[0m

      at Object.toBe (src/test/library-validation.test.ts:126:44)

PASS src/test/extract-libraries.test.ts
  extractLibraries AI Flow
    basic extraction
      ‚úì should extract libraries from task details (3 ms)
      ‚úì should handle empty task details (1 ms)
      ‚úì should extract from npm install commands (1 ms)
      ‚úì should normalize library names correctly (1 ms)
    error handling
      ‚úì should throw error when model is not provided (7 ms)
      ‚úì should handle API errors gracefully
      ‚úì should handle unexpected response format (1 ms)
    library name validation
      ‚úì should filter out invalid library names (1 ms)
      ‚úì should handle normalized library names
    output parsing
      ‚úì should parse newline-separated output (1 ms)
      ‚úì should remove duplicates from output
      ‚úì should filter out comments and empty lines (1 ms)

  console.log
    ‚úÖ Context structure validation passed

      at Object.log (src/test/basic-validation.test.ts:81:13)

  console.log
    ‚úÖ Task dependency validation passed

      at Object.log (src/test/basic-validation.test.ts:110:13)

  console.log
    ‚úÖ Validation pipeline execution passed

      at Object.log (src/test/basic-validation.test.ts:131:13)

  console.log
    ‚úÖ Architecture-file structure alignment passed

      at Object.log (src/test/basic-validation.test.ts:146:13)

  console.log
    ‚úÖ Task ordering logic passed

      at Object.log (src/test/basic-validation.test.ts:164:13)

  console.log
    ‚úÖ Circular dependency detection passed

      at Object.log (src/test/basic-validation.test.ts:207:13)

  console.log
    ‚úÖ Performance benchmark passed: 0.00ms average

      at Object.log (src/test/basic-validation.test.ts:224:13)

  console.log
    ‚úÖ All architectural flaws have been addressed

      at Object.log (src/test/basic-validation.test.ts:271:13)

  console.log
    ‚úÖ Task enhancement structure validated

      at Object.log (src/test/basic-validation.test.ts:283:13)

PASS src/test/basic-validation.test.ts
  System Validation Tests
    ‚úì Context structure validation (4 ms)
    ‚úì Task dependency validation (2 ms)
    ‚úì Validation pipeline execution (3 ms)
    ‚úì Architecture-file structure alignment (1 ms)
    ‚úì Task ordering logic (2 ms)
    ‚úì Circular dependency detection (1 ms)
    ‚úì Performance benchmarking (5 ms)
  System Architecture Requirements
    ‚úì Addresses identified architectural flaws (1 ms)
    ‚úì Task enhancement structure (1 ms)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:33:22)

  console.warn
    Failed to extract libraries from task task1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:33:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:33:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:33:22)

  console.warn
    Failed to extract libraries from task task2: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:33:22)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:33:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:71:22)

  console.warn
    Failed to extract libraries from task test1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:71:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:71:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:90:22)

  console.warn
    Failed to extract libraries from task test1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:90:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:90:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:116:22)

  console.warn
    Failed to extract libraries from task test1: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:116:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:116:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.warn
    Failed to extract libraries from task frontend-setup: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:189:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.warn
    Failed to extract libraries from task backend-setup: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:189:22)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.warn
    Failed to extract libraries from task testing-setup: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:189:22)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:189:22)

  console.log
    Starting LiteLLM generation with model: test/model config: { apiBase: 'test-base' }

      at Object.log [as generate] (src/ai/litellm.ts:232:15)

  console.log
    Using model: test/model baseUrl: test-base

      at Object.log [as generate] (src/ai/litellm.ts:246:15)

  console.error
    LiteLLM generation error: Invalid URL format

    [0m [90m 255 |[39m       
     [90m 256 |[39m     } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 257 |[39m       console[33m.[39merror([32m'LiteLLM generation error:'[39m[33m,[39m error [36minstanceof[39m [33mError[39m [33m?[39m error[33m.[39mmessage [33m:[39m [33mString[39m(error))[33m;[39m
     [90m     |[39m               [31m[1m^[22m[39m
     [90m 258 |[39m       
     [90m 259 |[39m       [90m// Provide more specific error messages[39m
     [90m 260 |[39m       [36mif[39m (error [36minstanceof[39m [33mError[39m) {[0m

      at Object.error [as generate] (src/ai/litellm.ts:257:15)
      at extractLibraries (src/ai/flows/extract-libraries.ts:61:20)
      at Function.identifyLibraries (src/services/library-identifier.ts:22:34)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:227:22)

  console.warn
    Failed to extract libraries from task problematic-task: Error: Invalid URL format
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:168:11)
        at validateAndSanitizeUrl (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:182:28)
        at Object.makeOpenAICall [as generate] (/home/runner/work/gitautomate/gitautomate/src/ai/litellm.ts:249:34)
        at generate (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:61:29)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:56)
        at Object.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/test/enhanced-library-extraction.test.ts:227:46)
        at Promise.finally.completed (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1556:28)
        at new Promise (<anonymous>)
        at callAsyncCircusFn (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1496:10)
        at _callCircusTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1006:40)
        at _runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:946:3)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at _runTestsForDescribeBlock (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
        at run (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
        at runAndTransformResultsToJestFormat (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/jestAdapterInit.js:1917:21)
        at jestAdapter (/home/runner/work/gitautomate/gitautomate/node_modules/jest-circus/build/runner.js:101:19)
        at runTestInternal (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:275:16)
        at runTest (/home/runner/work/gitautomate/gitautomate/node_modules/jest-runner/build/index.js:343:7)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/enhanced-library-extraction.test.ts:227:22)

FAIL src/test/enhanced-library-extraction.test.ts
  Enhanced Library Extraction
    REQUIRED LIBRARIES pattern extraction
      ‚úï should extract libraries from REQUIRED LIBRARIES sections with highest confidence (31 ms)
      ‚úï should handle comma-separated and space-separated library lists (7 ms)
      ‚úï should extract all valid library names from REQUIRED LIBRARIES (5 ms)
    Combined extraction patterns
      ‚úï should prioritize REQUIRED LIBRARIES over other patterns (5 ms)
    Real-world task scenarios
      ‚úï should extract comprehensive library list from realistic tasks (15 ms)
      ‚úï should filter out invalid patterns that caused DNS errors (6 ms)

  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should extract libraries from REQUIRED LIBRARIES sections with highest confidence

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 40 |[39m       [90m// Should extract all explicitly required libraries[39m
     [90m 41 |[39m       [36mconst[39m libraryNames [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
    [31m[1m>[22m[39m[90m 42 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                            [31m[1m^[22m[39m
     [90m 43 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react-router-dom'[39m)[33m;[39m
     [90m 44 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'tailwindcss'[39m)[33m;[39m
     [90m 45 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m[0m

      at Object.toContain (src/test/enhanced-library-extraction.test.ts:42:28)

  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should handle comma-separated and space-separated library lists

    expect(received).toEqual(expected) // deep equality

    - Expected  - 6
    + Received  + 1

    - Array [
    -   "angular",
    -   "react",
    -   "svelte",
    -   "vue",
    - ]
    + Array []

    [0m [90m 76 |[39m       )[33m;[39m
     [90m 77 |[39m       [36mconst[39m names [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
    [31m[1m>[22m[39m[90m 78 |[39m       expect(names)[33m.[39mtoEqual([[32m'angular'[39m[33m,[39m [32m'react'[39m[33m,[39m [32m'svelte'[39m[33m,[39m [32m'vue'[39m])[33m;[39m
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 79 |[39m     })[33m;[39m
     [90m 80 |[39m
     [90m 81 |[39m     it([32m'should extract all valid library names from REQUIRED LIBRARIES'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toEqual (src/test/enhanced-library-extraction.test.ts:78:21)

  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should extract all valid library names from REQUIRED LIBRARIES

    expect(received).toEqual(expected) // deep equality

    - Expected  - 4
    + Received  + 1

    - Array [
    -   "react",
    -   "validlibrary",
    - ]
    + Array []

    [0m [90m 91 |[39m       [36mconst[39m names [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
     [90m 92 |[39m       [90m// Now that we have better filtering, only valid library names should be extracted[39m
    [31m[1m>[22m[39m[90m 93 |[39m       expect(names)[33m.[39mtoEqual([[32m'react'[39m[33m,[39m [32m'validlibrary'[39m])[33m;[39m
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 94 |[39m       
     [90m 95 |[39m       [90m// Should filter out common non-library words like 'config' and 'utils'[39m
     [90m 96 |[39m       expect(names)[33m.[39mnot[33m.[39mtoContain([32m'config'[39m)[33m;[39m[0m

      at Object.toEqual (src/test/enhanced-library-extraction.test.ts:93:21)

  ‚óè Enhanced Library Extraction ‚Ä∫ Combined extraction patterns ‚Ä∫ should prioritize REQUIRED LIBRARIES over other patterns

    expect(received).toBe(expected) // Object.is equality

    Expected: 0.9
    Received: undefined

    [0m [90m 123 |[39m
     [90m 124 |[39m       [90m// All libraries extracted by LLM have the same confidence score[39m
    [31m[1m>[22m[39m[90m 125 |[39m       expect(expressLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m     |[39m                                           [31m[1m^[22m[39m
     [90m 126 |[39m       expect(reactLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m 127 |[39m       expect(fastifyLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m 128 |[39m       expect(vueLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m[0m

      at Object.toBe (src/test/enhanced-library-extraction.test.ts:125:43)

  ‚óè Enhanced Library Extraction ‚Ä∫ Real-world task scenarios ‚Ä∫ should extract comprehensive library list from realistic tasks

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 12
    Received:    0

    [0m [90m 190 |[39m       
     [90m 191 |[39m       [90m// Should extract 12+ distinct libraries[39m
    [31m[1m>[22m[39m[90m 192 |[39m       expect(result[33m.[39mlength)[33m.[39mtoBeGreaterThanOrEqual([35m12[39m)[33m;[39m
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 193 |[39m
     [90m 194 |[39m       [90m// All libraries should have reasonable confidence[39m
     [90m 195 |[39m       result[33m.[39mforEach(lib [33m=>[39m {[0m

      at Object.toBeGreaterThanOrEqual (src/test/enhanced-library-extraction.test.ts:192:29)

  ‚óè Enhanced Library Extraction ‚Ä∫ Real-world task scenarios ‚Ä∫ should filter out invalid patterns that caused DNS errors

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: []

    [0m [90m 229 |[39m       
     [90m 230 |[39m       [90m// Should only extract valid library names[39m
    [31m[1m>[22m[39m[90m 231 |[39m       expect(names)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m     |[39m                     [31m[1m^[22m[39m
     [90m 232 |[39m       expect(names)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m 233 |[39m       
     [90m 234 |[39m       [90m// Should NOT extract problematic patterns[39m[0m

      at Object.toContain (src/test/enhanced-library-extraction.test.ts:231:21)

  console.warn
    Failed to extract libraries from task 1: Error: An unexpected response was received from the server.
        at extractLibraries (/home/runner/work/gitautomate/gitautomate/src/ai/flows/extract-libraries.ts:71:11)
        at Function.identifyLibraries (/home/runner/work/gitautomate/gitautomate/src/services/library-identifier.ts:22:34)
        at Object.<anonymous> (/home/runner/work/gitautomate/gitautomate/src/test/library-identifier.test.ts:205:25)

    [0m [90m 46 |[39m         }
     [90m 47 |[39m       } [36mcatch[39m (error) {
    [31m[1m>[22m[39m[90m 48 |[39m         console[33m.[39mwarn([32m`Failed to extract libraries from task ${task.id}:`[39m[33m,[39m error)[33m;[39m
     [90m    |[39m                 [31m[1m^[22m[39m
     [90m 49 |[39m         [90m// Continue with other tasks if one fails[39m
     [90m 50 |[39m       }
     [90m 51 |[39m     }[0m

      at Function.warn [as identifyLibraries] (src/services/library-identifier.ts:48:17)
      at Object.<anonymous> (src/test/library-identifier.test.ts:205:25)

PASS src/test/library-identifier.test.ts
  LibraryIdentifier
    identifyLibraries
      ‚úì should extract libraries from import statements (2 ms)
      ‚úì should extract libraries from package manager commands (1 ms)
      ‚úì should extract well-known libraries from context (1 ms)
      ‚úì should filter out invalid library names
      ‚úì should assign correct categories (2 ms)
      ‚úì should handle empty tasks gracefully (1 ms)
      ‚úì should handle tasks with no libraries (13 ms)
      ‚úì should filter libraries by confidence score
      ‚úì should limit number of results (1 ms)

PASS src/test/browser-markdown-linter-comprehensive.test.ts
  BrowserMarkdownLinter
    lintAndFix
      ‚úì should fix basic formatting issues (3 ms)
      ‚úì should return valid for well-formatted markdown
      ‚úì should handle code blocks correctly (1 ms)
      ‚úì should handle empty input
      ‚úì should handle whitespace-only input (1 ms)
    validateMarkdown
      ‚úì should identify markdown issues
    applyAllFixes
      ‚úì should apply fixes and track changes (1 ms)
    edge cases
      ‚úì should handle very long content
      ‚úì should handle special characters in headers (1 ms)
      ‚úì should preserve inline code (1 ms)

PASS src/test/context-validator.test.ts
  ContextValidator
    validateFullContext
      ‚úì should validate a complete and valid context (3 ms)
      ‚úì should detect missing architecture
      ‚úì should detect missing file structure
      ‚úì should validate task dependencies
      ‚úì should detect circular dependencies (1 ms)
      ‚úì should validate architecture and file structure alignment (1 ms)
      ‚úì should handle empty tasks array
      ‚úì should validate task structure completeness (1 ms)
    error severity handling
      ‚úì should classify errors by severity

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:29:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:35:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:41:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:47:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:53:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:59:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:65:13)

  console.log
    ‚úÖ Test skipped - no mocks allowed

      at Object.log (src/test/comprehensive-system.test.ts:73:13)

PASS src/test/comprehensive-system.test.ts
  Comprehensive System Integration Test
    ‚úì Complete project generation workflow (2 ms)
    ‚úì Dependency graph validation
    ‚úì Validation pipeline
    ‚úì Iterative refinement (1 ms)
    ‚úì Input validation (1 ms)
    ‚úì Minimal valid input (1 ms)
    ‚úì Performance benchmarking
  System Architecture Validation
    ‚úì Addresses original architectural flaws (1 ms)

PASS src/test/browser-markdown-linter.test.ts
  BrowserMarkdownLinter
    ‚úì should fix basic markdown formatting issues (2 ms)
    ‚úì should validate already well-formatted markdown (1 ms)
    ‚úì should handle code blocks properly
    ‚úì should fix list formatting (1 ms)

PASS src/test/markdown-formatting.test.ts
  Markdown Formatting
    ‚úì formatTaskMarkdown should handle proper markdown (2 ms)
    ‚úì ensureMarkdownStructure should add title if missing
    ‚úì ensureMarkdownStructure should fix header spacing
    ‚úì ensureMarkdownStructure should remove excessive blank lines
    ‚úì ensureMarkdownStructure should end with single newline

PASS src/test/research-task-format.test.ts
  Research Task Output
    ‚úì ResearchTaskOutput should have markdownContent field (2 ms)
    ‚úì ResearchTaskOutput format should be GitHub issue ready (1 ms)

Summary of all failing tests
FAIL src/test/research-task.test.ts (66.432 s)
  ‚óè researchTask AI Flow ‚Ä∫ basic functionality ‚Ä∫ should research task details and return enhanced task information

    expect(received).toContain(expected) // indexOf

    Expected substring: "Implementation Steps"
    Received string:    "Default research content"

    [0m [90m 79 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m researchTask(input[33m,[39m params[33m.[39mapiKey[33m,[39m params[33m.[39mmodel[33m,[39m params[33m.[39mapiBase)[33m;[39m
     [90m 80 |[39m
    [31m[1m>[22m[39m[90m 81 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Implementation Steps'[39m)[33m;[39m
     [90m    |[39m                                      [31m[1m^[22m[39m
     [90m 82 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Required Libraries'[39m)[33m;[39m
     [90m 83 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'Acceptance Criteria'[39m)[33m;[39m
     [90m 84 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoContain([32m'jsonwebtoken'[39m)[33m;[39m[0m

      at Object.toContain (src/test/research-task.test.ts:81:38)

  ‚óè researchTask AI Flow ‚Ä∫ error handling ‚Ä∫ should handle malformed response gracefully

    expect(received).toBe(expected) // Object.is equality

    Expected: "Invalid response format without proper structure"
    Received: "Task research content"

    [0m [90m 192 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m researchTask(input[33m,[39m params[33m.[39mapiKey[33m,[39m params[33m.[39mmodel[33m,[39m params[33m.[39mapiBase)[33m;[39m
     [90m 193 |[39m
    [31m[1m>[22m[39m[90m 194 |[39m       expect(result[33m.[39mmarkdownContent)[33m.[39mtoBe([32m'Invalid response format without proper structure'[39m)[33m;[39m
     [90m     |[39m                                      [31m[1m^[22m[39m
     [90m 195 |[39m     })[33m;[39m
     [90m 196 |[39m   })[33m;[39m
     [90m 197 |[39m[0m

      at Object.toBe (src/test/research-task.test.ts:194:38)

  ‚óè researchTask AI Flow ‚Ä∫ configuration options ‚Ä∫ should pass configuration options to AI service

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"config": {"apiBase": "https://api.test.com", "apiKey": "test-key", "temperature": 0.8}, "model": "test/model", "prompt": StringContaining "Test task"}
    Received
           1
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },
           2
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },
           3
              Object {
                "config": Object {
                  "apiBase": "https://api.test.com",
                  "apiKey": "test-key",
            -     "temperature": 0.8,
                },
                "model": "test/model",
            -   "prompt": StringContaining "Test task",
            +   "prompt": "You are an expert project manager and senior software engineer. Your task is to perform detailed research for a specific development task and provide a comprehensive implementation plan in markdown format following Test-Driven Development (TDD) methodology.
            +
            + **CRITICAL: You MUST output ONLY valid markdown format. DO NOT output JSON format. Use proper headers, lists, code blocks, and formatting. The content will be automatically validated and you may be asked to retry if the markdown is invalid.**
            +
            + The markdown content must follow this exact structure:
            +
            + # {Task Title}
            +
            + ## Context
            +
            + {Briefly explain how this task fits into the overall architecture}
            +
            + ## Implementation Steps (TDD Approach)
            +
            + {Provide a detailed, step-by-step implementation guide following Red-Green-Refactor methodology. Describe what needs to be implemented without including actual code snippets. Focus on:
            + - Files that need to be created or modified
            + - Functions/components that need to be implemented
            + - Integration points with other system components
            + - The expected behavior and functionality
            + - Any specific considerations or edge cases
            + - Test-Driven Development phases (Red-Green-Refactor)}
            +
            + ## Required Libraries
            +
            + {List all libraries, packages, frameworks, and tools needed for this specific task as a comma-separated list. Be comprehensive and specific. Examples:
            + - react, typescript, @types/node, tailwindcss, react-router-dom
            + - express, mongodb, mongoose, bcryptjs, jsonwebtoken, cors
            + - jest, @testing-library/react, @testing-library/jest-dom, @testing-library/user-event}
            +
            + ## Documentation
            +
            + Refer to the reference documentation for the required libraries listed above to understand their APIs, best practices, and implementation details before beginning development.
            +
            + ## Acceptance Criteria
            +
            + {Define what it means for this task to be considered \"done\" as a bulleted list}
            +
            + Overall Project Architecture:
            + Test architecture
            +
            + File Structure:
            + Test structure
            +
            + Overall Project Specifications:
            + Test specifications
            +
            + Now, provide the detailed implementation plan in markdown format for the following task:
            +
            + **Task Title: Test task**
            +
            + **IMPORTANT: Output ONLY markdown content. DO NOT output JSON format. Do not wrap your response in JSON objects or use any JSON structure.**
            + ",
              },

    Number of calls: 3

    [0m [90m 216 |[39m       [36mawait[39m researchTask(input[33m,[39m apiKey[33m,[39m model[33m,[39m apiBase[33m,[39m temperature)[33m;[39m
     [90m 217 |[39m
    [31m[1m>[22m[39m[90m 218 |[39m       expect(mockAI[33m.[39mgenerate)[33m.[39mtoHaveBeenCalledWith({
     [90m     |[39m                               [31m[1m^[22m[39m
     [90m 219 |[39m         model[33m:[39m [32m'test/model'[39m[33m,[39m
     [90m 220 |[39m         prompt[33m:[39m expect[33m.[39mstringContaining([32m'Test task'[39m)[33m,[39m
     [90m 221 |[39m         config[33m:[39m {[0m

      at Object.toHaveBeenCalledWith (src/test/research-task.test.ts:218:31)

FAIL src/test/actions.test.ts
  ‚óè App Actions ‚Ä∫ runGenerateArchitecture ‚Ä∫ should handle errors from generateArchitecture

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to generate architecture. The model may have returned an unexpected response."
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:84:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:84:60)

  ‚óè App Actions ‚Ä∫ runGenerateArchitecture ‚Ä∫ should preserve original error if it contains specific messages

    expect(received).rejects.toThrow(expected)

    Expected substring: "Model is required"
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:95:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:95:60)

  ‚óè App Actions ‚Ä∫ runGenerateFileStructure ‚Ä∫ should handle API key errors with specific message

    expect(received).rejects.toThrow(expected)

    Expected substring: "Failed to generate file structure: Your LLM API key is missing or invalid. Please check it in settings."
    Received message:   "File structure generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD, architecture, or specifications."

        [0m [90m 108 |[39m       )[33m;[39m
         [90m 109 |[39m     }
        [31m[1m>[22m[39m[90m 110 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m     |[39m           [31m[1m^[22m[39m
         [90m 111 |[39m       [32m'File structure generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD, architecture, or specifications.'[39m
         [90m 112 |[39m     )[33m;[39m
         [90m 113 |[39m   }[0m

      at runGenerateFileStructure (src/app/actions.ts:110:11)
      at Object.<anonymous> (src/test/actions.test.ts:215:7)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:215:61)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should call researchTask with correct parameters

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      {"architecture": "React with JWT", "fileStructure": "src/auth/", "specifications": "Login and registration", "title": "Implement user authentication"},
      "test-key",
      "test/model",
      "https://api.test.com",
    - 0.8,
    + undefined,
    + 0.8,

    Number of calls: 1

    [0m [90m 256 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m runResearchTask(input[33m,[39m options)[33m;[39m
     [90m 257 |[39m
    [31m[1m>[22m[39m[90m 258 |[39m       expect(mockResearchTask)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 259 |[39m         input[33m,[39m
     [90m 260 |[39m         [32m'test-key'[39m[33m,[39m
     [90m 261 |[39m         [32m'test/model'[39m[33m,[39m[0m

      at Object.toHaveBeenCalledWith (src/test/actions.test.ts:258:32)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should handle errors from researchTask

    expect(received).rejects.toThrow()

    Received promise resolved instead of rejected
    Resolved to value: undefined

    [0m [90m 276 |[39m       mockResearchTask[33m.[39mmockRejectedValueOnce([36mnew[39m [33mError[39m([32m'Research failed'[39m))[33m;[39m
     [90m 277 |[39m
    [31m[1m>[22m[39m[90m 278 |[39m       [36mawait[39m expect(runResearchTask(input))[33m.[39mrejects[33m.[39mtoThrow(
     [90m     |[39m             [31m[1m^[22m[39m
     [90m 279 |[39m         [32m'Failed to research task. The model may have returned an unexpected response.'[39m
     [90m 280 |[39m       )[33m;[39m
     [90m 281 |[39m     })[33m;[39m[0m

      at expect (node_modules/expect/build/index.js:2116:15)
      at Object.expect (src/test/actions.test.ts:278:13)

  ‚óè App Actions ‚Ä∫ runResearchTask ‚Ä∫ should handle undefined options

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    - Expected
    + Received

      {"architecture": "Test architecture", "fileStructure": "Test structure", "specifications": "Test specifications", "title": "Test task"},
      undefined,
      undefined,
      undefined,
      undefined,
    + undefined,

    Number of calls: 1

    [0m [90m 297 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m runResearchTask(input)[33m;[39m
     [90m 298 |[39m
    [31m[1m>[22m[39m[90m 299 |[39m       expect(mockResearchTask)[33m.[39mtoHaveBeenCalledWith(
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 300 |[39m         input[33m,[39m
     [90m 301 |[39m         undefined[33m,[39m
     [90m 302 |[39m         undefined[33m,[39m[0m

      at Object.toHaveBeenCalledWith (src/test/actions.test.ts:299:32)

  ‚óè App Actions ‚Ä∫ error handling patterns ‚Ä∫ should preserve specific error messages

    expect(received).rejects.toThrow(expected)

    Expected substring: "Model is required"
    Received message:   "Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD."

        [0m [90m 46 |[39m       )[33m;[39m
         [90m 47 |[39m     }
        [31m[1m>[22m[39m[90m 48 |[39m     [36mthrow[39m [36mnew[39m [33mError[39m(
         [90m    |[39m           [31m[1m^[22m[39m
         [90m 49 |[39m       [32m'Architecture generation failed. The model may have returned an unexpected response. Try a different model or adjust the PRD.'[39m
         [90m 50 |[39m     )[33m;[39m
         [90m 51 |[39m   }[0m

      at runGenerateArchitecture (src/app/actions.ts:48:11)
      at Object.<anonymous> (src/test/actions.test.ts:321:9)
      at Object.toThrow (node_modules/expect/build/index.js:2155:20)
      at Object.toThrow (src/test/actions.test.ts:322:20)

FAIL src/test/documentation-fetcher-comprehensive.test.ts
  ‚óè DocumentationFetcher Service ‚Ä∫ fetchLibraryDocumentation ‚Ä∫ should fetch documentation for valid libraries

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

    [0m [90m 145 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 146 |[39m
    [31m[1m>[22m[39m[90m 147 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 148 |[39m       expect(result[33m.[39mlibraries[[35m0[39m][33m.[39mname)[33m.[39mtoBe([32m'react'[39m)[33m;[39m
     [90m 149 |[39m       expect(result[33m.[39mfetchedCount)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m 150 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBe([35m50[39m)[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:147:32)

  ‚óè DocumentationFetcher Service ‚Ä∫ fetchLibraryDocumentation ‚Ä∫ should trim documentation if it exceeds size limits

    expect(received).toHaveLength(expected)

    Expected length: 1
    Received length: 0
    Received array:  []

    [0m [90m 253 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 254 |[39m
    [31m[1m>[22m[39m[90m 255 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m1[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 256 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBeLessThan([35m2000[39m)[33m;[39m
     [90m 257 |[39m     })[33m;[39m
     [90m 258 |[39m   })[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:255:32)

  ‚óè DocumentationFetcher Service ‚Ä∫ error handling and edge cases ‚Ä∫ should handle concurrent library fetching

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 0
    Received array:  []

    [0m [90m 352 |[39m       [36mconst[39m result [33m=[39m [36mawait[39m documentationFetcher[33m.[39mfetchLibraryDocumentation(libraries)[33m;[39m
     [90m 353 |[39m
    [31m[1m>[22m[39m[90m 354 |[39m       expect(result[33m.[39mlibraries)[33m.[39mtoHaveLength([35m2[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 355 |[39m       expect(result[33m.[39mfetchedCount)[33m.[39mtoBe([35m2[39m)[33m;[39m
     [90m 356 |[39m       expect(result[33m.[39mtotalSizeKB)[33m.[39mtoBe([35m30[39m)[33m;[39m
     [90m 357 |[39m     })[33m;[39m[0m

      at Object.toHaveLength (src/test/documentation-fetcher-comprehensive.test.ts:354:32)

FAIL src/test/generate-architecture.test.ts
  ‚óè generateArchitecture AI Flow ‚Ä∫ error handling ‚Ä∫ should retry on markdown linting failures

    expect(received).toBe(expected) // Object.is equality

    Expected: "Fixed content"
    Received: "Some spec content"

    [0m [90m 207 |[39m
     [90m 208 |[39m       expect(result[33m.[39marchitecture)[33m.[39mtoBe([32m'Fixed content'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 209 |[39m       expect(result[33m.[39mspecifications)[33m.[39mtoBe([32m'Fixed content'[39m)[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 210 |[39m       expect(mockAI[33m.[39mgenerate)[33m.[39mtoHaveBeenCalledTimes([35m3[39m)[33m;[39m [90m// Should retry[39m
     [90m 211 |[39m     })[33m;[39m
     [90m 212 |[39m   })[33m;[39m[0m

      at Object.toBe (src/test/generate-architecture.test.ts:209:37)

  ‚óè generateArchitecture AI Flow ‚Ä∫ markdown parsing ‚Ä∫ should handle fallback parsing when headers are missing

    expect(received).toBeTruthy()

    Received: ""

    [0m [90m 250 |[39m       [90m// Should still return content even with poor formatting[39m
     [90m 251 |[39m       expect(result[33m.[39marchitecture)[33m.[39mtoBeTruthy()[33m;[39m
    [31m[1m>[22m[39m[90m 252 |[39m       expect(result[33m.[39mspecifications)[33m.[39mtoBeTruthy()[33m;[39m
     [90m     |[39m                                     [31m[1m^[22m[39m
     [90m 253 |[39m     })[33m;[39m
     [90m 254 |[39m   })[33m;[39m
     [90m 255 |[39m[0m

      at Object.toBeTruthy (src/test/generate-architecture.test.ts:252:37)

FAIL src/test/documentation-fetcher.test.ts
  ‚óè DocumentationFetcher ‚Ä∫ Documentation Size Management ‚Ä∫ should respect size limits

    expect(received).toBe(expected) // Object.is equality

    Expected: "github-readme"
    Received: "official-site"

    [0m [90m 61 |[39m       
     [90m 62 |[39m       [90m// Should prioritize README first[39m
    [31m[1m>[22m[39m[90m 63 |[39m       expect(trimmed[[35m0[39m][33m.[39mtype)[33m.[39mtoBe([32m'github-readme'[39m)[33m;[39m
     [90m    |[39m                               [31m[1m^[22m[39m
     [90m 64 |[39m     })[33m;[39m
     [90m 65 |[39m   })[33m;[39m
     [90m 66 |[39m[0m

      at Object.toBe (src/test/documentation-fetcher.test.ts:63:31)

FAIL src/test/integration.test.ts
  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should extract only real library names from realistic project tasks

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 93 |[39m       
     [90m 94 |[39m       [90m// Should contain real libraries[39m
    [31m[1m>[22m[39m[90m 95 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                            [31m[1m^[22m[39m
     [90m 96 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'express'[39m)[33m;[39m
     [90m 97 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m
     [90m 98 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'jest'[39m)[33m;[39m[0m

      at Object.toContain (src/test/integration.test.ts:95:28)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should not extract invalid names from complex technical content

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: ["react", "typescript"]

    [0m [90m 136 |[39m       
     [90m 137 |[39m       [90m// Should extract pygame but not the class/method names[39m
    [31m[1m>[22m[39m[90m 138 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m     |[39m                            [31m[1m^[22m[39m
     [90m 139 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'pygame.sprite.sprite'[39m)[33m;[39m
     [90m 140 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'config.font_path'[39m)[33m;[39m 
     [90m 141 |[39m       expect(libraryNames)[33m.[39mnot[33m.[39mtoContain([32m'base.sprite.collision_handler'[39m)[33m;[39m[0m

      at Object.toContain (src/test/integration.test.ts:138:28)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ Library Extraction ‚Ä∫ should categorize libraries correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: "library"
    Received: undefined

    [0m [90m 164 |[39m       [90m// All libraries should have 'library' category since no hardcoding allowed[39m
     [90m 165 |[39m       expect(react[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 166 |[39m       expect(express[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m     |[39m                                 [31m[1m^[22m[39m
     [90m 167 |[39m       expect(postgresql[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m 168 |[39m       expect(jest[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m
     [90m 169 |[39m       expect(docker[33m?[39m[33m.[39mcategory)[33m.[39mtoBe([32m'library'[39m)[33m;[39m[0m

      at Object.toBe (src/test/integration.test.ts:166:33)

  ‚óè Integration Tests - Real Functionality ‚Ä∫ End-to-End Documentation Flow ‚Ä∫ should extract libraries and fetch documentation for a complete project

    expect(received).toBeGreaterThan(expected)

    Expected: > 3
    Received:   2

    [0m [90m 268 |[39m       [90m// Step 1: Extract libraries[39m
     [90m 269 |[39m       [36mconst[39m libraries [33m=[39m [36mawait[39m [33mLibraryIdentifier[39m[33m.[39midentifyLibraries(projectTasks[33m,[39m [32m'test-api-key'[39m[33m,[39m [32m'test/model'[39m[33m,[39m [32m'https://api.openai.com/v1'[39m)[33m;[39m
    [31m[1m>[22m[39m[90m 270 |[39m       expect(libraries[33m.[39mlength)[33m.[39mtoBeGreaterThan([35m3[39m)[33m;[39m
     [90m     |[39m                                [31m[1m^[22m[39m
     [90m 271 |[39m       
     [90m 272 |[39m       [90m// Step 2: Filter high-confidence libraries[39m
     [90m 273 |[39m       [36mconst[39m filtered [33m=[39m [33mLibraryIdentifier[39m[33m.[39mfilterLibraries(libraries[33m,[39m {[0m

      at Object.toBeGreaterThan (src/test/integration.test.ts:270:32)

FAIL src/test/library-validation.test.ts
  ‚óè Library Extraction - Core Functionality ‚Ä∫ should extract real libraries and reject garbage patterns

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: []

    [0m [90m 33 |[39m     
     [90m 34 |[39m     [90m// Should extract real libraries[39m
    [31m[1m>[22m[39m[90m 35 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m    |[39m                          [31m[1m^[22m[39m
     [90m 36 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m 37 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m
     [90m 38 |[39m     [0m

      at Object.toContain (src/test/library-validation.test.ts:35:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should handle import statements correctly

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 75 |[39m     [36mconst[39m libraryNames [33m=[39m libraries[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m;[39m
     [90m 76 |[39m     
    [31m[1m>[22m[39m[90m 77 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                          [31m[1m^[22m[39m
     [90m 78 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'axios'[39m)[33m;[39m
     [90m 79 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'express'[39m)[33m;[39m
     [90m 80 |[39m     [0m

      at Object.toContain (src/test/library-validation.test.ts:77:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should handle package manager commands

    expect(received).toContain(expected) // indexOf

    Expected value: "lodash"
    Received array: []

    [0m [90m 100 |[39m     [36mconst[39m libraryNames [33m=[39m libraries[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m;[39m
     [90m 101 |[39m     
    [31m[1m>[22m[39m[90m 102 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'lodash'[39m)[33m;[39m
     [90m     |[39m                          [31m[1m^[22m[39m
     [90m 103 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'moment'[39m)[33m;[39m
     [90m 104 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'redux'[39m)[33m;[39m
     [90m 105 |[39m     expect(libraryNames)[33m.[39mtoContain([32m'tensorflow'[39m)[33m;[39m[0m

      at Object.toContain (src/test/library-validation.test.ts:102:26)

  ‚óè Library Extraction - Core Functionality ‚Ä∫ should categorize libraries correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

    [0m [90m 124 |[39m     console[33m.[39mlog([32m'Categories:'[39m[33m,[39m categories)[33m;[39m
     [90m 125 |[39m     [90m// Since no hardcoded categories, all libraries should have 'library' category[39m
    [31m[1m>[22m[39m[90m 126 |[39m     expect([33mObject[39m[33m.[39mkeys(categories)[33m.[39mlength)[33m.[39mtoBe([35m1[39m)[33m;[39m
     [90m     |[39m                                            [31m[1m^[22m[39m
     [90m 127 |[39m     expect(categories[[32m'library'[39m])[33m.[39mtoBeDefined()[33m;[39m
     [90m 128 |[39m   })[33m;[39m
     [90m 129 |[39m[0m

      at Object.toBe (src/test/library-validation.test.ts:126:44)

FAIL src/test/enhanced-library-extraction.test.ts
  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should extract libraries from REQUIRED LIBRARIES sections with highest confidence

    expect(received).toContain(expected) // indexOf

    Expected value: "react"
    Received array: []

    [0m [90m 40 |[39m       [90m// Should extract all explicitly required libraries[39m
     [90m 41 |[39m       [36mconst[39m libraryNames [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
    [31m[1m>[22m[39m[90m 42 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m    |[39m                            [31m[1m^[22m[39m
     [90m 43 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'react-router-dom'[39m)[33m;[39m
     [90m 44 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'tailwindcss'[39m)[33m;[39m
     [90m 45 |[39m       expect(libraryNames)[33m.[39mtoContain([32m'typescript'[39m)[33m;[39m[0m

      at Object.toContain (src/test/enhanced-library-extraction.test.ts:42:28)

  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should handle comma-separated and space-separated library lists

    expect(received).toEqual(expected) // deep equality

    - Expected  - 6
    + Received  + 1

    - Array [
    -   "angular",
    -   "react",
    -   "svelte",
    -   "vue",
    - ]
    + Array []

    [0m [90m 76 |[39m       )[33m;[39m
     [90m 77 |[39m       [36mconst[39m names [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
    [31m[1m>[22m[39m[90m 78 |[39m       expect(names)[33m.[39mtoEqual([[32m'angular'[39m[33m,[39m [32m'react'[39m[33m,[39m [32m'svelte'[39m[33m,[39m [32m'vue'[39m])[33m;[39m
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 79 |[39m     })[33m;[39m
     [90m 80 |[39m
     [90m 81 |[39m     it([32m'should extract all valid library names from REQUIRED LIBRARIES'[39m[33m,[39m [36masync[39m () [33m=>[39m {[0m

      at Object.toEqual (src/test/enhanced-library-extraction.test.ts:78:21)

  ‚óè Enhanced Library Extraction ‚Ä∫ REQUIRED LIBRARIES pattern extraction ‚Ä∫ should extract all valid library names from REQUIRED LIBRARIES

    expect(received).toEqual(expected) // deep equality

    - Expected  - 4
    + Received  + 1

    - Array [
    -   "react",
    -   "validlibrary",
    - ]
    + Array []

    [0m [90m 91 |[39m       [36mconst[39m names [33m=[39m result[33m.[39mmap(lib [33m=>[39m lib[33m.[39mname)[33m.[39msort()[33m;[39m
     [90m 92 |[39m       [90m// Now that we have better filtering, only valid library names should be extracted[39m
    [31m[1m>[22m[39m[90m 93 |[39m       expect(names)[33m.[39mtoEqual([[32m'react'[39m[33m,[39m [32m'validlibrary'[39m])[33m;[39m
     [90m    |[39m                     [31m[1m^[22m[39m
     [90m 94 |[39m       
     [90m 95 |[39m       [90m// Should filter out common non-library words like 'config' and 'utils'[39m
     [90m 96 |[39m       expect(names)[33m.[39mnot[33m.[39mtoContain([32m'config'[39m)[33m;[39m[0m

      at Object.toEqual (src/test/enhanced-library-extraction.test.ts:93:21)

  ‚óè Enhanced Library Extraction ‚Ä∫ Combined extraction patterns ‚Ä∫ should prioritize REQUIRED LIBRARIES over other patterns

    expect(received).toBe(expected) // Object.is equality

    Expected: 0.9
    Received: undefined

    [0m [90m 123 |[39m
     [90m 124 |[39m       [90m// All libraries extracted by LLM have the same confidence score[39m
    [31m[1m>[22m[39m[90m 125 |[39m       expect(expressLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m     |[39m                                           [31m[1m^[22m[39m
     [90m 126 |[39m       expect(reactLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m 127 |[39m       expect(fastifyLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m
     [90m 128 |[39m       expect(vueLib[33m?[39m[33m.[39mconfidenceScore)[33m.[39mtoBe([35m0.9[39m)[33m;[39m [90m// LLM extracted[39m[0m

      at Object.toBe (src/test/enhanced-library-extraction.test.ts:125:43)

  ‚óè Enhanced Library Extraction ‚Ä∫ Real-world task scenarios ‚Ä∫ should extract comprehensive library list from realistic tasks

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 12
    Received:    0

    [0m [90m 190 |[39m       
     [90m 191 |[39m       [90m// Should extract 12+ distinct libraries[39m
    [31m[1m>[22m[39m[90m 192 |[39m       expect(result[33m.[39mlength)[33m.[39mtoBeGreaterThanOrEqual([35m12[39m)[33m;[39m
     [90m     |[39m                             [31m[1m^[22m[39m
     [90m 193 |[39m
     [90m 194 |[39m       [90m// All libraries should have reasonable confidence[39m
     [90m 195 |[39m       result[33m.[39mforEach(lib [33m=>[39m {[0m

      at Object.toBeGreaterThanOrEqual (src/test/enhanced-library-extraction.test.ts:192:29)

  ‚óè Enhanced Library Extraction ‚Ä∫ Real-world task scenarios ‚Ä∫ should filter out invalid patterns that caused DNS errors

    expect(received).toContain(expected) // indexOf

    Expected value: "pygame"
    Received array: []

    [0m [90m 229 |[39m       
     [90m 230 |[39m       [90m// Should only extract valid library names[39m
    [31m[1m>[22m[39m[90m 231 |[39m       expect(names)[33m.[39mtoContain([32m'pygame'[39m)[33m;[39m
     [90m     |[39m                     [31m[1m^[22m[39m
     [90m 232 |[39m       expect(names)[33m.[39mtoContain([32m'react'[39m)[33m;[39m
     [90m 233 |[39m       
     [90m 234 |[39m       [90m// Should NOT extract problematic patterns[39m[0m

      at Object.toContain (src/test/enhanced-library-extraction.test.ts:231:21)


Test Suites: 8 failed, 6 skipped, 14 passed, 22 of 28 total
Tests:       30 failed, 117 skipped, 183 passed, 330 total
Snapshots:   0 total
Time:        74.252 s, estimated 104 s
Ran all test suites.
